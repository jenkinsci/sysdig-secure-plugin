/*
Copyright (C) 2016-2024 Sysdig

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package com.sysdig.jenkins.plugins.sysdig.application.vm.report;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.sysdig.jenkins.plugins.sysdig.domain.vm.ImageScanningResult;
import com.sysdig.jenkins.plugins.sysdig.domain.vm.report.Package;
import com.sysdig.jenkins.plugins.sysdig.domain.vm.report.Vuln;

import javax.annotation.Nonnull;
import java.util.Arrays;
import java.util.List;

public class VulnerabilityReportProcessor {

  public static JsonObject generateVulnerabilityReport(ImageScanningResult result) {
    var securityJson = new JsonObject();
    JsonArray columnsJson = new JsonArray();

    for (String column : Arrays.asList("Tag", "CVE ID", "Severity", "Vulnerability Package", "Fix Available", "URL", "Package Type", "Package Path", "Disclosure Date", "Solution Date")) {
      JsonObject columnJson = new JsonObject();
      columnJson.addProperty("title", column);
      columnsJson.add(columnJson);
    }

    securityJson.add("columns", columnsJson);

    JsonArray dataJson = new JsonArray();
    dataJson.addAll(getVulnerabilitiesArray(result.getTag(), result.getVulnerabilityReport()));
    securityJson.add("data", dataJson);
    return securityJson;
  }


  protected static JsonArray getVulnerabilitiesArray(@Nonnull String tag, @Nonnull List<Package> vulList) {
    var dataJson = new JsonArray();

    for (Package packageJson : vulList) {
      for (Vuln vulnJson : packageJson.getVulns().orElseGet(List::of)) {
        var vulnArray = new JsonArray();
        vulnArray.add(tag);
        vulnArray.add(vulnJson.getName().orElseThrow());
        vulnArray.add(vulnJson.getSeverity().orElseThrow().getValue().orElseThrow());
        vulnArray.add(packageJson.getName().orElseThrow());
        vulnArray.add(packageJson.getSuggestedFix().orElse("None"));
        vulnArray.add(vulnJson.getSeverity().orElseThrow().getSourceName().orElse(""));
        vulnArray.add(packageJson.getType().orElseThrow());
        vulnArray.add(packageJson.getPath().orElse("N/A"));
        vulnArray.add(vulnJson.getDisclosureDate().orElseThrow());
        vulnArray.add(vulnJson.getSolutionDate().orElse("None"));
        dataJson.add(vulnArray);
      }
    }

    return dataJson;
  }


}
